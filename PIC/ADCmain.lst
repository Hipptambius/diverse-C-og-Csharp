CCS PCH C Compiler, Version 4.115, 93510674               15-maj-13 14:54

               Filename: C:\Users\Jimmy\Desktop\Arbejde-programmering\ADCmain.lst

               ROM used: 382 bytes (1%)
                         Largest free fragment is 31554
               RAM used: 5 (0%) at main() level
                         10 (1%) worst case
               Stack:    1 locations

*
0000:  GOTO   002C
.................... //////////////////////// 
.................... // ADC-Løbelys OPG.   // 
.................... // Programmering, PIC.//  
.................... // TEK, HOLMEN, 2013  // 
.................... // Jimmy schach       // 
.................... //////////////////////// 
.................... #include <ADCmain.h> 
.................... #include <18F252.h> 
.................... //////// Standard Header file for the PIC18F252 device //////////////// 
.................... #device PIC18F252 
.................... #list 
....................  
.................... #device ICD=TRUE 
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(clock=4000000) 
0004:  CLRF   FEA
0006:  MOVLW  0A
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    002A
000E:  MOVLW  01
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  4A
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  BRA    0026
0026:  DECFSZ FEF,F
0028:  BRA    000E
002A:  RETLW  00
....................  
....................  
....................  
.................... void main() 
.................... { 
002C:  CLRF   FF8
002E:  BCF    FD0.7
0030:  CLRF   FEA
0032:  CLRF   FE9
0034:  BSF    FC1.0
0036:  BSF    FC1.1
0038:  BSF    FC1.2
003A:  BCF    FC1.3
.................... setup_adc(ADC_CLOCK_INTERNAL); 
003C:  BCF    FC1.6
003E:  BSF    FC2.6
0040:  BSF    FC2.7
0042:  BCF    FC1.7
0044:  BSF    FC2.0
.................... setup_adc_ports(ALL_ANALOG); 
0046:  BCF    FC1.0
0048:  BCF    FC1.1
004A:  BCF    FC1.2
004C:  BCF    FC1.3
.................... set_adc_channel(0); 
004E:  MOVLW  00
0050:  MOVWF  01
0052:  MOVF   FC2,W
0054:  ANDLW  C7
0056:  IORWF  01,W
0058:  MOVWF  FC2
....................  
....................    while (TRUE) 
....................    { 
....................    //Udlæsning fra analog port 
....................    int32 del=READ_ADC(); 
005A:  BSF    FC2.2
005C:  BTFSC  FC2.2
005E:  BRA    005C
0060:  MOVF   FC4,W
0062:  CLRF   08
0064:  CLRF   07
0066:  CLRF   06
0068:  MOVWF  05
....................     
....................    //Løbelys 
....................    output_high(PIN_B0); 
006A:  BCF    F93.0
006C:  BSF    F8A.0
....................    output_high(PIN_C2); 
006E:  BCF    F94.2
0070:  BSF    F8B.2
....................    delay_ms(del); 
0072:  MOVFF  06,09
0076:  INCF   09,F
0078:  DECF   09,F
007A:  BTFSC  FD8.2
007C:  BRA    0086
007E:  MOVLW  FF
0080:  MOVWF  0A
0082:  RCALL  0004
0084:  BRA    0078
0086:  MOVFF  05,0A
008A:  RCALL  0004
....................    output_low(PIN_B0); 
008C:  BCF    F93.0
008E:  BCF    F8A.0
....................    output_low(PIN_C2); 
0090:  BCF    F94.2
0092:  BCF    F8B.2
....................    delay_ms(del); 
0094:  MOVFF  06,09
0098:  INCF   09,F
009A:  DECF   09,F
009C:  BTFSC  FD8.2
009E:  BRA    00A8
00A0:  MOVLW  FF
00A2:  MOVWF  0A
00A4:  RCALL  0004
00A6:  BRA    009A
00A8:  MOVFF  05,0A
00AC:  RCALL  0004
....................    output_high(PIN_B1); 
00AE:  BCF    F93.1
00B0:  BSF    F8A.1
....................    output_high(PIN_C2); 
00B2:  BCF    F94.2
00B4:  BSF    F8B.2
....................    delay_ms(del); 
00B6:  MOVFF  06,09
00BA:  INCF   09,F
00BC:  DECF   09,F
00BE:  BTFSC  FD8.2
00C0:  BRA    00CA
00C2:  MOVLW  FF
00C4:  MOVWF  0A
00C6:  RCALL  0004
00C8:  BRA    00BC
00CA:  MOVFF  05,0A
00CE:  RCALL  0004
....................    output_low(PIN_B1); 
00D0:  BCF    F93.1
00D2:  BCF    F8A.1
....................    output_low(PIN_C2); 
00D4:  BCF    F94.2
00D6:  BCF    F8B.2
....................    delay_ms(del); 
00D8:  MOVFF  06,09
00DC:  INCF   09,F
00DE:  DECF   09,F
00E0:  BTFSC  FD8.2
00E2:  BRA    00EC
00E4:  MOVLW  FF
00E6:  MOVWF  0A
00E8:  RCALL  0004
00EA:  BRA    00DE
00EC:  MOVFF  05,0A
00F0:  RCALL  0004
....................    output_high(PIN_B2); 
00F2:  BCF    F93.2
00F4:  BSF    F8A.2
....................    output_high(PIN_C2); 
00F6:  BCF    F94.2
00F8:  BSF    F8B.2
....................    delay_ms(del); 
00FA:  MOVFF  06,09
00FE:  INCF   09,F
0100:  DECF   09,F
0102:  BTFSC  FD8.2
0104:  BRA    010E
0106:  MOVLW  FF
0108:  MOVWF  0A
010A:  RCALL  0004
010C:  BRA    0100
010E:  MOVFF  05,0A
0112:  RCALL  0004
....................    output_low(PIN_B2); 
0114:  BCF    F93.2
0116:  BCF    F8A.2
....................    output_low(PIN_C2); 
0118:  BCF    F94.2
011A:  BCF    F8B.2
....................    delay_ms(del); 
011C:  MOVFF  06,09
0120:  INCF   09,F
0122:  DECF   09,F
0124:  BTFSC  FD8.2
0126:  BRA    0130
0128:  MOVLW  FF
012A:  MOVWF  0A
012C:  RCALL  0004
012E:  BRA    0122
0130:  MOVFF  05,0A
0134:  RCALL  0004
....................    output_high(PIN_B3); 
0136:  BCF    F93.3
0138:  BSF    F8A.3
....................    output_high(PIN_C2); 
013A:  BCF    F94.2
013C:  BSF    F8B.2
....................    delay_ms(del); 
013E:  MOVFF  06,09
0142:  INCF   09,F
0144:  DECF   09,F
0146:  BTFSC  FD8.2
0148:  BRA    0152
014A:  MOVLW  FF
014C:  MOVWF  0A
014E:  RCALL  0004
0150:  BRA    0144
0152:  MOVFF  05,0A
0156:  RCALL  0004
....................    output_low(PIN_B3); 
0158:  BCF    F93.3
015A:  BCF    F8A.3
....................    output_low(PIN_C2); 
015C:  BCF    F94.2
015E:  BCF    F8B.2
....................    delay_ms(del); 
0160:  MOVFF  06,09
0164:  INCF   09,F
0166:  DECF   09,F
0168:  BTFSC  FD8.2
016A:  BRA    0174
016C:  MOVLW  FF
016E:  MOVWF  0A
0170:  RCALL  0004
0172:  BRA    0166
0174:  MOVFF  05,0A
0178:  RCALL  0004
....................    } 
017A:  BRA    005A
.................... } 
017C:  BRA    017C

Configuration Fuses:
   Word  1: 2700   RC_IO NOOSCSEN
   Word  2: 0E0D   NOPUT NOBROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0001   STVREN NOLVP DEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

   Some fuses have been forced to be compatible with the ICD debugger.
