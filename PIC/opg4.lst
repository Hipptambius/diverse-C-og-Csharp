CCS PCH C Compiler, Version 4.115, 93510674               15-maj-13 13:54

               Filename: C:\Users\Jimmy\Desktop\Arbejde-programmering\opg4.lst

               ROM used: 326 bytes (1%)
                         Largest free fragment is 31610
               RAM used: 9 (1%) at main() level
                         10 (1%) worst case
               Stack:    1 locations

*
0000:  GOTO   002C
.................... #include <opg4.h> 
.................... #include <18F252.h> 
.................... //////// Standard Header file for the PIC18F252 device //////////////// 
.................... #device PIC18F252 
.................... #list 
....................  
.................... #device ICD=TRUE 
.................... #device adc=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(clock=4000000) 
0004:  CLRF   FEA
0006:  MOVLW  09
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    002A
000E:  MOVLW  01
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  4A
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  BRA    0026
0026:  DECFSZ FEF,F
0028:  BRA    000E
002A:  RETLW  00
....................  
....................  
.................... int y=0; 
.................... int16 del=50; 
.................... int lys=0; 
.................... void main() 
.................... { 
002C:  CLRF   FF8
002E:  BCF    FD0.7
0030:  CLRF   FEA
0032:  CLRF   FE9
0034:  CLRF   04
0036:  CLRF   06
0038:  MOVLW  32
003A:  MOVWF  05
003C:  CLRF   07
003E:  BSF    FC1.0
0040:  BSF    FC1.1
0042:  BSF    FC1.2
0044:  BCF    FC1.3
....................    while (TRUE) 
....................    { 
....................       if (input(PIN_A4) == 0) //trykket ned 
0046:  BSF    F92.4
0048:  BTFSC  F80.4
004A:  BRA    0050
....................       { 
....................       y=1; 
004C:  MOVLW  01
004E:  MOVWF  04
....................       } 
....................       if (input(PIN_A4) == 1 && y == 1) //sluppet tasten 
0050:  BSF    F92.4
0052:  BTFSS  F80.4
0054:  BRA    0068
0056:  DECFSZ 04,W
0058:  BRA    0068
....................          { 
....................          y=0; 
005A:  CLRF   04
....................          if (lys==0) 
005C:  MOVF   07,F
005E:  BNZ   0066
....................          { 
....................          lys=1; 
0060:  MOVLW  01
0062:  MOVWF  07
....................          } 
....................          else 
0064:  BRA    0068
....................          { 
....................          lys=0; 
0066:  CLRF   07
....................          } 
....................          } 
....................  
....................             if (lys==1) 
0068:  DECFSZ 07,W
006A:  BRA    0142
....................             { 
....................             output_high(PIN_B0); 
006C:  BCF    F93.0
006E:  BSF    F8A.0
....................             delay_ms(del); 
0070:  MOVFF  06,08
0074:  INCF   08,F
0076:  DECF   08,F
0078:  BTFSC  FD8.2
007A:  BRA    0084
007C:  MOVLW  FF
007E:  MOVWF  09
0080:  RCALL  0004
0082:  BRA    0076
0084:  MOVFF  05,09
0088:  RCALL  0004
....................             output_low(PIN_B0); 
008A:  BCF    F93.0
008C:  BCF    F8A.0
....................             delay_ms(del); 
008E:  MOVFF  06,08
0092:  INCF   08,F
0094:  DECF   08,F
0096:  BTFSC  FD8.2
0098:  BRA    00A2
009A:  MOVLW  FF
009C:  MOVWF  09
009E:  RCALL  0004
00A0:  BRA    0094
00A2:  MOVFF  05,09
00A6:  RCALL  0004
....................             output_high(PIN_B1); 
00A8:  BCF    F93.1
00AA:  BSF    F8A.1
....................             delay_ms(del); 
00AC:  MOVFF  06,08
00B0:  INCF   08,F
00B2:  DECF   08,F
00B4:  BTFSC  FD8.2
00B6:  BRA    00C0
00B8:  MOVLW  FF
00BA:  MOVWF  09
00BC:  RCALL  0004
00BE:  BRA    00B2
00C0:  MOVFF  05,09
00C4:  RCALL  0004
....................             output_low(PIN_B1); 
00C6:  BCF    F93.1
00C8:  BCF    F8A.1
....................             delay_ms(del); 
00CA:  MOVFF  06,08
00CE:  INCF   08,F
00D0:  DECF   08,F
00D2:  BTFSC  FD8.2
00D4:  BRA    00DE
00D6:  MOVLW  FF
00D8:  MOVWF  09
00DA:  RCALL  0004
00DC:  BRA    00D0
00DE:  MOVFF  05,09
00E2:  RCALL  0004
....................             output_high(PIN_B2); 
00E4:  BCF    F93.2
00E6:  BSF    F8A.2
....................             delay_ms(del); 
00E8:  MOVFF  06,08
00EC:  INCF   08,F
00EE:  DECF   08,F
00F0:  BTFSC  FD8.2
00F2:  BRA    00FC
00F4:  MOVLW  FF
00F6:  MOVWF  09
00F8:  RCALL  0004
00FA:  BRA    00EE
00FC:  MOVFF  05,09
0100:  RCALL  0004
....................             output_low(PIN_B2); 
0102:  BCF    F93.2
0104:  BCF    F8A.2
....................             output_high(PIN_B3); 
0106:  BCF    F93.3
0108:  BSF    F8A.3
....................             delay_ms(del); 
010A:  MOVFF  06,08
010E:  INCF   08,F
0110:  DECF   08,F
0112:  BTFSC  FD8.2
0114:  BRA    011E
0116:  MOVLW  FF
0118:  MOVWF  09
011A:  RCALL  0004
011C:  BRA    0110
011E:  MOVFF  05,09
0122:  RCALL  0004
....................             output_low(PIN_B3); 
0124:  BCF    F93.3
0126:  BCF    F8A.3
....................             delay_ms(del); 
0128:  MOVFF  06,08
012C:  INCF   08,F
012E:  DECF   08,F
0130:  BTFSC  FD8.2
0132:  BRA    013C
0134:  MOVLW  FF
0136:  MOVWF  09
0138:  RCALL  0004
013A:  BRA    012E
013C:  MOVFF  05,09
0140:  RCALL  0004
....................             }    
....................    } 
0142:  BRA    0046
....................  
.................... } 
0144:  BRA    0144

Configuration Fuses:
   Word  1: 2700   RC_IO NOOSCSEN
   Word  2: 0E0D   NOPUT NOBROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0001   STVREN NOLVP DEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

   Some fuses have been forced to be compatible with the ICD debugger.
