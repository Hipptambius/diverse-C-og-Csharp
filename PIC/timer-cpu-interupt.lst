CCS PCH C Compiler, Version 4.115, 93510674               16-maj-13 13:21

               Filename: C:\Users\Jimmy\Desktop\Arbejde-programmering\Opgaver\timer-cpu-interupt.lst

               ROM used: 266 bytes (1%)
                         Largest free fragment is 31666
               RAM used: 25 (2%) at main() level
                         26 (2%) worst case
               Stack:    2 worst case (0 in main + 2 for interrupts)

*
0000:  GOTO   00E8
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.5
0056:  GOTO   0060
005A:  BTFSC  FF2.2
005C:  GOTO   00D8
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... //////////////////////// 
.................... // INTERUPT TIMER OPG.// 
.................... // Programmering, PIC.//  
.................... // TEK, HOLMEN, 2013  // 
.................... // Jimmy schach       // 
.................... //////////////////////// 
.................... #include <ISR.h> 
.................... #include <18F252.h> 
.................... //////// Standard Header file for the PIC18F252 device //////////////// 
.................... #device PIC18F252 
.................... #list 
....................  
.................... #device ICD=TRUE 
.................... #device adc=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(clock=4000000) 
00AE:  CLRF   FEA
00B0:  MOVLW  19
00B2:  MOVWF  FE9
00B4:  MOVF   FEF,W
00B6:  BZ    00D4
00B8:  MOVLW  01
00BA:  MOVWF  01
00BC:  CLRF   00
00BE:  DECFSZ 00,F
00C0:  BRA    00BE
00C2:  DECFSZ 01,F
00C4:  BRA    00BC
00C6:  MOVLW  4A
00C8:  MOVWF  00
00CA:  DECFSZ 00,F
00CC:  BRA    00CA
00CE:  BRA    00D0
00D0:  DECFSZ FEF,F
00D2:  BRA    00B8
00D4:  GOTO   00E2 (RETURN)
....................  
....................  
.................... #int_RTCC //interupt RTCC=REAL TIME CLOCK CONTROLLER 
....................  
.................... //TIMER INTERUPT REQUEST,(VOID)=DU KAN IKKE OVERFØRE PARAMETRE 
.................... void TIMER_isr(void) 
.................... { 
....................    output_toggle(PIN_B0); 
00D8:  BCF    F93.0
00DA:  BTG    F8A.0
....................    DELAY_MS(100); 
00DC:  MOVLW  64
00DE:  MOVWF  19
00E0:  BRA    00AE
.................... } 
.................... /*CPU INTERN CLOCK=4MHZ DIVIDERET MED 4 =1MHZ 
.................... CPU INTERN CLOCK I µS=1 DIVIDERET MED CPU INTERN CLOCK(1MHZ)=1µS 
.................... TIDEN EFTER PRESCALE=CPU INTERN CLOCK(1µS) GANGE RTCC_DIV_64(64)=64µS 
.................... TIDEN EFTER TIMEREN ER TALT OP(8BIT)=TIDEN EFTER  
.................... PRESCALE GANGE 8 BIT(256)=16384MS 
.................... DVS. AT CPUEN BLIVER AFBRUDT CA. HVERT 16MS(16384MS) FOR AT KALDE  
.................... FUNKTIONEN TIMER0_isr 
.................... */ 
00E2:  BCF    FF2.2
00E4:  GOTO   0060
.................... void main() 
.................... { 
00E8:  CLRF   FF8
00EA:  BCF    FD0.7
00EC:  BSF    07.7
00EE:  CLRF   FEA
00F0:  CLRF   FE9
00F2:  BSF    FC1.0
00F4:  BSF    FC1.1
00F6:  BSF    FC1.2
00F8:  BCF    FC1.3
....................    setup_adc_ports(AN0); 
00FA:  BCF    FC1.0
00FC:  BSF    FC1.1
00FE:  BSF    FC1.2
0100:  BSF    FC1.3
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_64|RTCC_8_bit); 
0102:  MOVLW  C5
0104:  MOVWF  FD5
....................    enable_interrupts(INT_TIMER0); 
0106:  BSF    FF2.5
....................    enable_interrupts(GLOBAL); 
0108:  MOVLW  C0
010A:  IORWF  FF2,F
....................    
.................... } 
010C:  BRA    010C

Configuration Fuses:
   Word  1: 2700   RC_IO NOOSCSEN
   Word  2: 0E0D   NOPUT NOBROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0001   STVREN NOLVP DEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

   Some fuses have been forced to be compatible with the ICD debugger.
